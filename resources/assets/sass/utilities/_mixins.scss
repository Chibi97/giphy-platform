/* Mixins */

/**
  Makes transitions in the format of:
  transition: prop1 easing duration, prop2 easing duration ...

  First argument is duration, other default to `all` and `ease-in`

  TODO: fix, getts messed up.
**/
@mixin make-transition($duration, $elements: all, $easing: ease-in) {
  @if $elements == all {
    transition: $elements $easing $duration;
  } 
  @else {
    $result: ();
    @for $i from 1 through length($elements) {
      $type: nth($elements, $i);
      $result: append($result, $type);
      $result: append($result, $easing);
      $result: append($result, $duration);
      @if $i != length($elements) {
        $result: append($result, unquote(","))
      }
    }
    transition: $result;
  }
}

/**
  Uses the breakpoints map to inject media queries into
  CSS code for responsive design
**/
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @error "The breakpoint you're reffering to doesn't exist."
  }
} 